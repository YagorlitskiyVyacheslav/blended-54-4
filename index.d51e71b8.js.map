{"mappings":"IAQAA,EARqB,EAACC,KAAEA,EAAIC,OAAEA,EAAMC,GAAEA,KAAS,kEACfF,0CACEC,2BACfC,8E,ICInBC,EAPa,CACX,CAAED,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,c,ICChDG,EALa,CACXC,KAAMC,SAASC,eAAe,QAC9BC,KAAMF,SAASC,eAAe,iBCDzB,IAkBIE,EAAS,CAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACZ,EAAIa,IAGrDb,IAFFa,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,ICZLX,EAAKC,KAAKa,iBAAiB,UAfRC,IACjBA,EAAMC,iBACN,MAAMpB,KAAEA,EAAIC,OAAEA,GAAWkB,EAAME,cAAcC,SACxCtB,GAASC,GAIdE,EAAKoB,KAAK,CAAEvB,KAAMA,EAAKwB,MAAOvB,OAAQA,EAAOuB,MAAOtB,GAAIO,MACxDL,EAAKI,KAAKiB,mBACR,YACA1B,EAAaI,EAAKA,EAAKuB,OAAS,KAElCP,EAAME,cAAcM,SARlBC,MAAM,yBCGVxB,EAAKI,KAAKU,iBAAiB,SARFC,IACvB,MAAMU,EAAYV,EAAMW,OAAOC,QAAQ7B,GACjC8B,EAAU7B,EAAK8B,QAAOC,GAAQA,EAAKhC,KAAO2B,IAC5CG,EAAQN,SAAWvB,EAAKuB,SAC5BvB,EAAKgC,OAAO,EAAGhC,EAAKuB,UAAWM,GAC/B5B,EAAKI,KAAK4B,UAAYjC,EAAKkC,KAAIC,GAAWvC,EAAauC,KAAUC,KAAK,QCFxE,MAAMC,EAAcrC,EAAKkC,KAAIC,GAAWvC,EAAauC,KAErDlC,EAAKI,KAAKiB,mBAAmB,aAAce,EAAYD,KAAK","sources":["src/js/createMarkup.js","src/js/data.js","src/js/refs.js","node_modules/nanoid/index.browser.js","src/js/submit-form.js","src/js/delete-button-event.js","src/index.js"],"sourcesContent":["const createMarkup = ({ name, number, id }) => `<li class=\"contact-list__item\">\n<p class=\"contact-list__name\">${name}</p>\n<p class=\"contact-list__number\">${number}</p>\n<button data-id=\"${id}\" class=\"contact-list__button\" type=\"button\">\n  &#9785;\n</button>\n</li>`;\n\nexport default createMarkup;\n","const data = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default data;\n","const refs = {\n  form: document.getElementById('form'),\n  list: document.getElementById('contact-list'),\n};\n\nexport default refs;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import refs from './refs';\nimport data from './data';\nimport { nanoid } from 'nanoid';\nimport createMarkup from './createMarkup';\n\nconst submitForm = event => {\n  event.preventDefault();\n  const { name, number } = event.currentTarget.elements;\n  if (!name || !number) {\n    alert('Заповніть всі поля');\n    return;\n  }\n  data.push({ name: name.value, number: number.value, id: nanoid() });\n  refs.list.insertAdjacentHTML(\n    'beforeend',\n    createMarkup(data[data.length - 1])\n  );\n  event.currentTarget.reset();\n};\n\nrefs.form.addEventListener('submit', submitForm);\n","import refs from './refs';\nimport data from './data';\nimport createMarkup from './createMarkup';\n\nconst onClickDeleteBtn = event => {\n  const contactID = event.target.dataset.id;\n  const newData = data.filter(item => item.id !== contactID);\n  if (newData.length === data.length) return;\n  data.splice(0, data.length, ...newData);\n  refs.list.innerHTML = data.map(contact => createMarkup(contact)).join('');\n};\n\nrefs.list.addEventListener('click', onClickDeleteBtn);\n","import createMarkup from './js/createMarkup';\nimport data from './js/data';\nimport refs from './js/refs';\n\nimport './js/submit-form';\nimport './js/delete-button-event';\n\nconst contactList = data.map(contact => createMarkup(contact));\n\nrefs.list.insertAdjacentHTML('afterbegin', contactList.join(''));\n\n// localStorage.setItem('contacts', JSON.stringify(data));\n\n// console.log(JSON.parse(localStorage.getItem('contacts')));\n"],"names":["$bb2db7a89a40ba72$export$2e2bcd8739ae039","name","number","id","$deb185f198c84388$export$2e2bcd8739ae039","$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","form","document","getElementById","list","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","addEventListener","event","preventDefault","currentTarget","elements","push","value","insertAdjacentHTML","length","reset","alert","contactID","target","dataset","newData","filter","item","splice","innerHTML","map","contact","join","$1f0dc3b9307be026$var$contactList"],"version":3,"file":"index.d51e71b8.js.map"}